package org.example.Model;

import org.example.View.Monitoring;

/**
 * Касса/закон - тот, кто проводит сделку/транзакцию, покупку/продажу
 */
public class Contract {

    /**
     * Идентификатор
     */
    private Integer id;

    /**
     * Номер чека
     */
    private static long checkNumber;

    /**
     * Проведение сделки/транзакции, покупки/продажи с учетом розыгрыша
     * @param store данные со стороны продавца, в том числе рассчитанная корзина с учетом розыгрыша
     * @param customer данные со стороны покупателя
     */
    public void newTransaction(Store store, Customer customer, Monitoring monitor) {
        // Здесь можно и дальше увеличивать программу следующим образом:
        // 1) Запуском метода уменьшения кол-ва денег покупателя (на стоимость корзины, предоставленной продавцом)
        // 2) Запуском метода увеличения кол-ва денег продавца (на стоимость корзины, предоставленной продавцом)
        // 3) Запуском метода уменьшения кол-ва товара продавца (на список товаров корзины, предоставленной продавцом)
        // 4) Запуском метода увеличения кол-ва товара покупателя (на список товаров корзины, предоставленной продавцом)
        // Но в данной промежуточной работе будет достаточно отправить на View информацию о том, что сделка состоялась
        checkNumber += 1;
        monitor.sendInfo(   "Проведена сделка между магазином с идентификатором номер " + store.getId() +
                            " и продавцом с идентификатором номер " + customer.getId() +
                            ", чек номер " + checkNumber
        );
    }
}
